<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >
<generatorConfiguration>
<!--mybatis-generator:generate -->
	<!-- 引入配置文件 -->
	<properties resource="application.properties" />

	<classPathEntry
		location="E:\mysql-connector-java-5.1.38.jar" />


	<context id="Mysql" targetRuntime="MyBatis3">
		<jdbcConnection
			driverClass="${spring.datasource.driver-class-name}"
			connectionURL="${spring.datasource.url}"
			userId="${spring.datasource.username}"
			password="${spring.datasource.password}" />

		<!-- 类型转换 -->
		<javaTypeResolver>
			<!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer true，把JDBC DECIMAL 
				和 NUMERIC 类型解析为java.math.BigDecimal -->
			<property name="forceBigDecimals" value="false" />
		</javaTypeResolver>

		<!-- 生成model模型，对应的包路径，以及文件存放路径(targetProject)，targetProject可以指定具体的路径,如./src/main/java， 
			也可以使用“MAVEN”来自动生成，这样生成的代码会在target/generatord-source目录下 -->
		<javaModelGenerator
			targetPackage="com.example.demo.user.model"
			targetProject="./src/main/java">
			<!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->
			<property name="enableSubPackages" value="false" />
			<!-- 从数据库返回的值被清理前后的空格 -->
			<property name="trimStrings" value="true" />
		</javaModelGenerator>
		<!--对应的mapper.xml文件 -->
		<sqlMapGenerator
			targetPackage="com.example.demo.user.dao.mapper"
			targetProject="./src/main/java">
			<property name="enableSubPackages" value="false" />
		</sqlMapGenerator>
		<!-- 对应的Mapper接口类文件 -->
		<javaClientGenerator type="XMLMAPPER"
			targetPackage="com.example.demo.user.dao"
			targetProject="./src/main/java">
			<property name="enableSubPackages" value="false" />
		</javaClientGenerator>
		<table tableName="G_Group"
			domainObjectName="GroupData"
			schema="springbootes" enableCountByExample="false"
			enableUpdateByExample="false" enableDeleteByExample="false"
			enableSelectByExample="false" selectByExampleQueryId="false">
			<!-- 忽略列，不生成bean 字段 <ignoreColumn column="FRED" /> -->
			<!-- 指定列的java数据类型 <columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" 
				/> -->
			<!-- 用于指定生成实体类时是否使用实际的列名作为实体类的属性名。false是 Camel Case风格 -->
			<!--<property name="useActualColumnNames" value="false" /> -->
		</table>
		<table tableName="M_MAP"
			domainObjectName="MAPData"
			schema="springbootes" enableCountByExample="false"
			enableUpdateByExample="false" enableDeleteByExample="false"
			enableSelectByExample="false" selectByExampleQueryId="false">
		</table>
		<table tableName="T_Loging_User"
			domainObjectName="LogingUse"
			schema="springbootes" enableCountByExample="false"
			enableUpdateByExample="false" enableDeleteByExample="false"
			enableSelectByExample="false" selectByExampleQueryId="false">
		</table>
		<table tableName="T_Service"
			domainObjectName="Authority"
			schema="springbootes" enableCountByExample="false"
			enableUpdateByExample="false" enableDeleteByExample="false"
			enableSelectByExample="false" selectByExampleQueryId="false">
		</table>
	</context>
</generatorConfiguration>  